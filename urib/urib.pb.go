// Code generated by protoc-gen-go. DO NOT EDIT.
// source: urib.proto

package urib

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// URIB event type
type UribEventType int32

const (
	UribEventType_URIB_EVENT_TYPE_NO_EVENT      UribEventType = 0
	UribEventType_URIB_EVENT_TYPE_ADD           UribEventType = 1
	UribEventType_URIB_EVENT_TYPE_DELETE        UribEventType = 2
	UribEventType_URIB_EVENT_TYPE_UPDATE        UribEventType = 3
	UribEventType_URIB_EVENT_TYPE_DOWNLOAD      UribEventType = 4
	UribEventType_URIB_EVENT_TYPE_DOWNLOAD_DONE UribEventType = 5
)

// Enum value maps for UribEventType.
var (
	UribEventType_name = map[int32]string{
		0: "URIB_EVENT_TYPE_NO_EVENT",
		1: "URIB_EVENT_TYPE_ADD",
		2: "URIB_EVENT_TYPE_DELETE",
		3: "URIB_EVENT_TYPE_UPDATE",
		4: "URIB_EVENT_TYPE_DOWNLOAD",
		5: "URIB_EVENT_TYPE_DOWNLOAD_DONE",
	}
	UribEventType_value = map[string]int32{
		"URIB_EVENT_TYPE_NO_EVENT":      0,
		"URIB_EVENT_TYPE_ADD":           1,
		"URIB_EVENT_TYPE_DELETE":        2,
		"URIB_EVENT_TYPE_UPDATE":        3,
		"URIB_EVENT_TYPE_DOWNLOAD":      4,
		"URIB_EVENT_TYPE_DOWNLOAD_DONE": 5,
	}
)

func (x UribEventType) Enum() *UribEventType {
	p := new(UribEventType)
	*p = x
	return p
}

func (x UribEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UribEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_urib_proto_enumTypes[0].Descriptor()
}

func (UribEventType) Type() protoreflect.EnumType {
	return &file_urib_proto_enumTypes[0]
}

func (x UribEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UribEventType.Descriptor instead.
func (UribEventType) EnumDescriptor() ([]byte, []int) {
	return file_urib_proto_rawDescGZIP(), []int{0}
}

// URIB encap type
type EncapType int32

const (
	EncapType_ENCAP_TYPE_NONE  EncapType = 0
	EncapType_ENCAP_TYPE_VXLAN EncapType = 1
)

// Enum value maps for EncapType.
var (
	EncapType_name = map[int32]string{
		0: "ENCAP_TYPE_NONE",
		1: "ENCAP_TYPE_VXLAN",
	}
	EncapType_value = map[string]int32{
		"ENCAP_TYPE_NONE":  0,
		"ENCAP_TYPE_VXLAN": 1,
	}
)

func (x EncapType) Enum() *EncapType {
	p := new(EncapType)
	*p = x
	return p
}

func (x EncapType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EncapType) Descriptor() protoreflect.EnumDescriptor {
	return file_urib_proto_enumTypes[1].Descriptor()
}

func (EncapType) Type() protoreflect.EnumType {
	return &file_urib_proto_enumTypes[1]
}

func (x EncapType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EncapType.Descriptor instead.
func (EncapType) EnumDescriptor() ([]byte, []int) {
	return file_urib_proto_rawDescGZIP(), []int{1}
}

// URIB next hop type
type NhType int32

const (
	NhType_NH_TYPE_NONE      NhType = 0
	NhType_NH_TYPE_ATTACHED  NhType = 1
	NhType_NH_TYPE_LOCAL     NhType = 2
	NhType_NH_TYPE_DIRECT    NhType = 3
	NhType_NH_TYPE_RECURSIVE NhType = 4
	NhType_NH_TYPE_BACKUP    NhType = 5
	NhType_NH_TYPE_DROP      NhType = 6
	NhType_NH_TYPE_DISCARD   NhType = 7
)

// Enum value maps for NhType.
var (
	NhType_name = map[int32]string{
		0: "NH_TYPE_NONE",
		1: "NH_TYPE_ATTACHED",
		2: "NH_TYPE_LOCAL",
		3: "NH_TYPE_DIRECT",
		4: "NH_TYPE_RECURSIVE",
		5: "NH_TYPE_BACKUP",
		6: "NH_TYPE_DROP",
		7: "NH_TYPE_DISCARD",
	}
	NhType_value = map[string]int32{
		"NH_TYPE_NONE":      0,
		"NH_TYPE_ATTACHED":  1,
		"NH_TYPE_LOCAL":     2,
		"NH_TYPE_DIRECT":    3,
		"NH_TYPE_RECURSIVE": 4,
		"NH_TYPE_BACKUP":    5,
		"NH_TYPE_DROP":      6,
		"NH_TYPE_DISCARD":   7,
	}
)

func (x NhType) Enum() *NhType {
	p := new(NhType)
	*p = x
	return p
}

func (x NhType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NhType) Descriptor() protoreflect.EnumDescriptor {
	return file_urib_proto_enumTypes[2].Descriptor()
}

func (NhType) Type() protoreflect.EnumType {
	return &file_urib_proto_enumTypes[2]
}

func (x NhType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NhType.Descriptor instead.
func (NhType) EnumDescriptor() ([]byte, []int) {
	return file_urib_proto_rawDescGZIP(), []int{2}
}

// Next hop
type NxL3NextHopProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address of Next hop
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Outgoing interface for the next hop
	OutInterface string `protobuf:"bytes,2,opt,name=out_interface,json=outInterface,proto3" json:"out_interface,omitempty"`
	// Vrf name for the next hop
	VrfName string `protobuf:"bytes,3,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	// Owner of the next hop
	Owner string `protobuf:"bytes,4,opt,name=owner,proto3" json:"owner,omitempty"`
	// Preference for the next hop
	Preference uint32 `protobuf:"varint,5,opt,name=preference,proto3" json:"preference,omitempty"`
	// Metric for the next hop
	Metric uint32 `protobuf:"varint,6,opt,name=metric,proto3" json:"metric,omitempty"`
	// Tag for the next hop
	Tag uint32 `protobuf:"varint,7,opt,name=tag,proto3" json:"tag,omitempty"`
	// segment id for the next hop
	SegmentId uint32 `protobuf:"varint,8,opt,name=segment_id,json=segmentId,proto3" json:"segment_id,omitempty"`
	// tunnel id for the next hop
	TunnelId uint32 `protobuf:"varint,9,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	// encap type for the next hop
	EncapType EncapType `protobuf:"varint,10,opt,name=encap_type,json=encapType,proto3,enum=EncapType" json:"encap_type,omitempty"`
	// Bitwise-OR of Flags for NhType.
	NhTypeFlags uint32 `protobuf:"varint,11,opt,name=nh_type_flags,json=nhTypeFlags,proto3" json:"nh_type_flags,omitempty"`
}

func (x *NxL3NextHopProto) Reset() {
	*x = NxL3NextHopProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urib_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NxL3NextHopProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NxL3NextHopProto) ProtoMessage() {}

func (x *NxL3NextHopProto) ProtoReflect() protoreflect.Message {
	mi := &file_urib_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NxL3NextHopProto.ProtoReflect.Descriptor instead.
func (*NxL3NextHopProto) Descriptor() ([]byte, []int) {
	return file_urib_proto_rawDescGZIP(), []int{0}
}

func (x *NxL3NextHopProto) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *NxL3NextHopProto) GetOutInterface() string {
	if x != nil {
		return x.OutInterface
	}
	return ""
}

func (x *NxL3NextHopProto) GetVrfName() string {
	if x != nil {
		return x.VrfName
	}
	return ""
}

func (x *NxL3NextHopProto) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *NxL3NextHopProto) GetPreference() uint32 {
	if x != nil {
		return x.Preference
	}
	return 0
}

func (x *NxL3NextHopProto) GetMetric() uint32 {
	if x != nil {
		return x.Metric
	}
	return 0
}

func (x *NxL3NextHopProto) GetTag() uint32 {
	if x != nil {
		return x.Tag
	}
	return 0
}

func (x *NxL3NextHopProto) GetSegmentId() uint32 {
	if x != nil {
		return x.SegmentId
	}
	return 0
}

func (x *NxL3NextHopProto) GetTunnelId() uint32 {
	if x != nil {
		return x.TunnelId
	}
	return 0
}

func (x *NxL3NextHopProto) GetEncapType() EncapType {
	if x != nil {
		return x.EncapType
	}
	return EncapType_ENCAP_TYPE_NONE
}

func (x *NxL3NextHopProto) GetNhTypeFlags() uint32 {
	if x != nil {
		return x.NhTypeFlags
	}
	return 0
}

// L3 route
type NxL3RouteProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Vrf name of the l3 route
	VrfName string `protobuf:"bytes,1,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	// l3 route prefix address
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// Mask length for the l3 route
	MaskLen uint32 `protobuf:"varint,3,opt,name=mask_len,json=maskLen,proto3" json:"mask_len,omitempty"`
	// Number of next hops for the l3 route
	L3NextHopCount uint32 `protobuf:"varint,4,opt,name=l3_next_hop_count,json=l3NextHopCount,proto3" json:"l3_next_hop_count,omitempty"`
	// Event type
	EventType UribEventType `protobuf:"varint,5,opt,name=event_type,json=eventType,proto3,enum=UribEventType" json:"event_type,omitempty"`
	// Next hops
	NextHop []*NxL3NextHopProto `protobuf:"bytes,6,rep,name=next_hop,json=nextHop,proto3" json:"next_hop,omitempty"`
}

func (x *NxL3RouteProto) Reset() {
	*x = NxL3RouteProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urib_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NxL3RouteProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NxL3RouteProto) ProtoMessage() {}

func (x *NxL3RouteProto) ProtoReflect() protoreflect.Message {
	mi := &file_urib_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NxL3RouteProto.ProtoReflect.Descriptor instead.
func (*NxL3RouteProto) Descriptor() ([]byte, []int) {
	return file_urib_proto_rawDescGZIP(), []int{1}
}

func (x *NxL3RouteProto) GetVrfName() string {
	if x != nil {
		return x.VrfName
	}
	return ""
}

func (x *NxL3RouteProto) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *NxL3RouteProto) GetMaskLen() uint32 {
	if x != nil {
		return x.MaskLen
	}
	return 0
}

func (x *NxL3RouteProto) GetL3NextHopCount() uint32 {
	if x != nil {
		return x.L3NextHopCount
	}
	return 0
}

func (x *NxL3RouteProto) GetEventType() UribEventType {
	if x != nil {
		return x.EventType
	}
	return UribEventType_URIB_EVENT_TYPE_NO_EVENT
}

func (x *NxL3RouteProto) GetNextHop() []*NxL3NextHopProto {
	if x != nil {
		return x.NextHop
	}
	return nil
}

var File_urib_proto protoreflect.FileDescriptor

var file_urib_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x75, 0x72, 0x69, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd7, 0x02, 0x0a,
	0x10, 0x4e, 0x78, 0x4c, 0x33, 0x4e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6f,
	0x75, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x76, 0x72, 0x66, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x72, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x75,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74,
	0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x61, 0x70,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x45, 0x6e,
	0x63, 0x61, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x6e, 0x63, 0x61, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x66, 0x6c,
	0x61, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6e, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x22, 0xe8, 0x01, 0x0a, 0x0e, 0x4e, 0x78, 0x4c, 0x33, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x72, 0x66,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x72, 0x66,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x6d, 0x61, 0x73, 0x6b, 0x4c, 0x65, 0x6e, 0x12, 0x29, 0x0a, 0x11, 0x6c, 0x33, 0x5f,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x6f, 0x70, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6c, 0x33, 0x4e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x55, 0x72, 0x69, 0x62, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x6f, 0x70, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x78, 0x4c, 0x33, 0x4e, 0x65, 0x78, 0x74,
	0x48, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f,
	0x70, 0x2a, 0xbf, 0x01, 0x0a, 0x0d, 0x55, 0x72, 0x69, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x52, 0x49, 0x42, 0x5f, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10,
	0x00, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x52, 0x49, 0x42, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x44, 0x44, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x55, 0x52,
	0x49, 0x42, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45,
	0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x55, 0x52, 0x49, 0x42, 0x5f, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x52, 0x49, 0x42, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0x04,
	0x12, 0x21, 0x0a, 0x1d, 0x55, 0x52, 0x49, 0x42, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x44, 0x4f, 0x4e,
	0x45, 0x10, 0x05, 0x2a, 0x36, 0x0a, 0x09, 0x45, 0x6e, 0x63, 0x61, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x43, 0x41, 0x50, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x43, 0x41, 0x50, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x56, 0x58, 0x4c, 0x41, 0x4e, 0x10, 0x01, 0x2a, 0xa9, 0x01, 0x0a, 0x06,
	0x4e, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x48, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x4e, 0x48, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x45, 0x44, 0x10, 0x01, 0x12, 0x11,
	0x0a, 0x0d, 0x4e, 0x48, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x10,
	0x02, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x48, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x49, 0x52,
	0x45, 0x43, 0x54, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x4e, 0x48, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x52, 0x45, 0x43, 0x55, 0x52, 0x53, 0x49, 0x56, 0x45, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e,
	0x4e, 0x48, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x55, 0x50, 0x10, 0x05,
	0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x48, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x52, 0x4f, 0x50,
	0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x48, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x49,
	0x53, 0x43, 0x41, 0x52, 0x44, 0x10, 0x07, 0x42, 0x09, 0x5a, 0x04, 0x75, 0x72, 0x69, 0x62, 0xf8,
	0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_urib_proto_rawDescOnce sync.Once
	file_urib_proto_rawDescData = file_urib_proto_rawDesc
)

func file_urib_proto_rawDescGZIP() []byte {
	file_urib_proto_rawDescOnce.Do(func() {
		file_urib_proto_rawDescData = protoimpl.X.CompressGZIP(file_urib_proto_rawDescData)
	})
	return file_urib_proto_rawDescData
}

var file_urib_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_urib_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_urib_proto_goTypes = []interface{}{
	(UribEventType)(0),       // 0: UribEventType
	(EncapType)(0),           // 1: EncapType
	(NhType)(0),              // 2: NhType
	(*NxL3NextHopProto)(nil), // 3: NxL3NextHopProto
	(*NxL3RouteProto)(nil),   // 4: NxL3RouteProto
}
var file_urib_proto_depIdxs = []int32{
	1, // 0: NxL3NextHopProto.encap_type:type_name -> EncapType
	0, // 1: NxL3RouteProto.event_type:type_name -> UribEventType
	3, // 2: NxL3RouteProto.next_hop:type_name -> NxL3NextHopProto
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_urib_proto_init() }
func file_urib_proto_init() {
	if File_urib_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_urib_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NxL3NextHopProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_urib_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NxL3RouteProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_urib_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_urib_proto_goTypes,
		DependencyIndexes: file_urib_proto_depIdxs,
		EnumInfos:         file_urib_proto_enumTypes,
		MessageInfos:      file_urib_proto_msgTypes,
	}.Build()
	File_urib_proto = out.File
	file_urib_proto_rawDesc = nil
	file_urib_proto_goTypes = nil
	file_urib_proto_depIdxs = nil
}
